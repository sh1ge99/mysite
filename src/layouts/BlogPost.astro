---
import Layout from './Layout.astro';
import LikeButton from '../components/LikeButton';
import type { CollectionEntry } from 'astro:content';

type Props = CollectionEntry<'blog'>['data'] & {
  title: string;
  slug?: string;
};

const { title, pubDate, tags, slug } = Astro.props;
const currentYear = new Date().getFullYear();

// Calculate reading time (rough estimate: 300 characters per minute for Japanese)
const content = await Astro.slots.render('default');
const textContent = content.replace(/<[^>]*>/g, ''); // Remove HTML tags
const readingTime = Math.ceil(textContent.length / 300);
---

<Layout title={title}>
  <div class="min-h-screen bg-white">
    <article class="max-w-4xl mx-auto">
      {/* Header section */}
      <header class="px-4 sm:px-6 lg:px-8 pt-12 pb-16">
        <div class="max-w-3xl mx-auto text-center">
          <h1 class="text-4xl sm:text-5xl lg:text-4xl font-bold text-gray-900 mb-12 leading-[1.1] tracking-tight">
            {title}
          </h1>
          
          {/* Metadata section */}
          <div class="flex flex-col sm:flex-row justify-center gap-8 sm:gap-16 mb-8">
            <div class="text-center">
              <div class="text-xs font-semibold text-gray-500 uppercase tracking-wider mb-2">
                Published
              </div>
              <time class="text-sm text-gray-800 font-medium">
                {pubDate.toLocaleDateString('en-US', { 
                  year: 'numeric', 
                  month: 'short', 
                  day: 'numeric' 
                })}
              </time>
            </div>
            
            <div class="text-center">
              <div class="text-xs font-semibold text-gray-500 uppercase tracking-wider mb-2">
                Volume
              </div>
              <div class="text-sm text-gray-800 font-medium">
                {readingTime} min read
              </div>
            </div>
            
            {tags && tags.filter(tag => tag === 'Dev' || tag === 'Self').length > 0 && (
              <div class="text-center">
                <div class="text-xs font-semibold text-gray-500 uppercase tracking-wider mb-2">
                  Tag
                </div>
                <div class="text-sm text-gray-800 font-medium">
                  {tags.filter(tag => tag === 'Dev' || tag === 'Self')[0]}
                </div>
              </div>
            )}
          </div>
        </div>
      </header>
      
      {/* Divider line */}
      <div class="border-t border-gray-200 mx-4 sm:mx-6 lg:mx-8"></div>
      
      {/* Main content */}
      <main class="px-4 sm:px-6 lg:px-8 pt-16 pb-16">
        <div class="max-w-3xl mx-auto">
          <div class="prose prose-xl prose-gray max-w-none">
            <slot />
          </div>
        </div>
      </main>
      
      {/* Like section */}
      <section class="border-t border-gray-100 px-4 sm:px-6 lg:px-8 py-8">
        <div class="max-w-3xl mx-auto">
          <LikeButton client:load postSlug={slug || title} />
        </div>
      </section>
      
      {/* Navigation */}
      <section class="border-t border-gray-100 px-4 sm:px-6 lg:px-8 py-12">
        <div class="max-w-3xl mx-auto text-center">
          <a 
            href="/" 
            class="inline-flex items-center text-gray-600 hover:text-gray-900 transition-colors font-medium text-sm"
          >
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            Back to Blogs
          </a>
        </div>
      </section>
      
      {/* Footer */}
      <footer class="border-t border-gray-200 px-4 sm:px-6 lg:px-8 py-8">
        <div class="max-w-3xl mx-auto text-center">
          <div class="text-gray-500 text-sm">
            <p>&copy; {currentYear} shige.</p>
          </div>
        </div>
      </footer>
    </article>
  </div>
</Layout>

<style is:global>
  .prose {
    @apply text-gray-900;
    font-size: 1.125rem;
    line-height: 1.75;
    font-family: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
  }
  
  .prose h1 {
    @apply text-3xl font-bold text-gray-900 mt-16 mb-6 leading-tight;
    font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif;
  }
  
  .prose h2 {
    @apply text-2xl font-bold text-gray-900 mt-12 mb-4 leading-tight;
    font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif;
  }
  
  .prose h3 {
    @apply text-xl font-semibold text-gray-900 mt-10 mb-3 leading-tight;
    font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif;
  }
  
  .prose p {
    @apply text-gray-900 mb-6;
    line-height: 1.75;
  }
  
  .prose code {
    @apply bg-gray-100 text-gray-900 px-2 py-1 rounded text-sm font-mono;
    font-size: 0.875em;
  }
  
  .prose pre {
    @apply bg-gray-900 text-gray-100 p-6 rounded-lg overflow-x-auto my-8;
    font-size: 0.875rem;
    line-height: 1.6;
  }
  
  .prose pre code {
    @apply bg-transparent text-gray-100 p-0;
    color: inherit;
  }
  
  .prose blockquote {
    @apply border-l-4 border-gray-300 pl-6 my-8 italic text-gray-700;
  }
  
  .prose ul, .prose ol {
    @apply my-6;
  }
  
  .prose li {
    @apply text-gray-900 mb-2;
    line-height: 1.7;
  }
  
  .prose a {
    @apply text-gray-900 underline hover:no-underline transition-all;
  }
  
  .prose strong {
    @apply font-semibold text-gray-900;
  }
  
  .prose img {
    @apply rounded-lg my-8 mx-auto;
    max-width: 100%;
    height: auto;
  }
  
  .prose hr {
    @apply border-gray-200 my-12;
  }
  
  .prose table {
    @apply w-full border-collapse my-8;
  }
  
  .prose th, .prose td {
    @apply border border-gray-200 px-4 py-3 text-left;
  }
  
  .prose th {
    @apply bg-gray-50 font-semibold text-gray-900;
  }
</style>